on:
  workflow_call:
    inputs:
      envPath:
        description: "Which env to target (staging/production)"
        required: true
        type: string
      csp_access_key_id_env_var:
        description: "CSP env name used to authenticate"
        required: false
        type: string
      csp_access_key_env_var:
        description: "CSP env name used to authenticate"
        required: false
        type: string
      csp_region:
        description: "CSP region env name"
        required: false
        type: string
      region:
        description: "CSP region to deploy to"
        required: false
        type: string
    secrets:
      csp_access_key_id:
        description: "Access key id used to authenticate"
        required: false
      csp_access_key:
        description: "Access key used to authenticate"
        required: false



jobs:
  checkov_scan:
    runs-on: ubuntu-latest
    container:
      image: bridgecrew/checkov:2

    steps:
      # Important: This sets up your GITHUB_WORKSPACE environment variable
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Run checkov scan on ${{ inputs.envPath }}
        run: checkov -d ${{ inputs.envPath }}

  # tfsec scan:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: tfsec/tfsec:v1.13.2
  #
  #   steps:
  #     # Important: This sets up your GITHUB_WORKSPACE environment variable
  #     - name: Checkout repo
  #       uses: actions/checkout@v2
  #
  #     - name: Run checkov scan on ${{ inputs.envPath }}
  #       run: checkov -d ${{ input.envPath }}
  #       continue-on-failure: true

  terraform_validate:
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:1.0.11

    steps:
      # Important: This sets up your GITHUB_WORKSPACE environment variable
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Run terraform init
        run: |
             cd ${{ inputs.envPath }}
             export ${{ inputs.csp_access_key_id_env_var}}=${{ inputs.csp_access_key_id }}
             export ${{ inputs.csp_access_key_env_var}}=${{ inputs.csp_access_key }}
             export ${{ inputs.csp_region}}=${{ inputs.region }}
             terraform init
             terraform validate
